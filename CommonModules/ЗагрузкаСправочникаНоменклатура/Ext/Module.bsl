
#Область ПрограммныйИнтерфейс

// Возвращает общий модуль, используемый для загрузки справочника "Номенклатура"
// Если определить общий модуль не удалось, вызывается исключение
//
// Параметры:
//   ФорматФайла - Строка - формат файла, из которого будет производиться загрузка
//
// Возвращаемое значение:
//   ОбщийМодуль
//
Функция СоздатьПроцессорЗагрузки(ФорматФайла) Экспорт
	
	Если ФорматФайла = "JSON" Тогда
		Возврат ЗагрузкаСправочникаНоменклатураJSON;
	ИначеЕсли ФорматФайла = "XML" Тогда
		Возврат ЗагрузкаСправочникаНоменклатураXML;
	Иначе
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'Не предусмотрена загрузка из файла формата %1'"),
			ФорматФайла);
	КонецЕсли;
	
КонецФункции

// Сообщает результаты загрузки справочника "Номенклатура"
//
// Параметры:
//   КоличествоЭлементовУспешно - Число - количество успешно загруженных элементов
//   КоличествоЭлементовОшибка - Число - количество не загруженных элементов
//
Процедура СообщениеРезультатыЗагрузки(КоличествоЭлементовУспешно, КоличествоЭлементовОшибка) Экспорт
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = СтрШаблон(
		НСтр("ru = 'Загрузка завершена. Загружено %1 элементов. Не загружено %2 элементов'"),
		КоличествоЭлементовУспешно,
		КоличествоЭлементовОшибка);
	Сообщение.Сообщить();
	
КонецПроцедуры

// Возвращает таблицу значений, используемую для загрузки справочника "Номенклатура"
//
// Возвращаемое значение:
//   ТаблицаЗначений
//
Функция НовыйТаблицаНоменклатур() Экспорт
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Код",             Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(9)));
	Результат.Колонки.Добавить("Наименование",    Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(25)));
	Результат.Колонки.Добавить("Вид",             Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20)));
	Результат.Колонки.Добавить("ПометкаУдаления", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(5)));
	
	Возврат Результат;
	
КонецФункции

// Обрабатывает таблицу номенклатур (создает/перезаполняет, записывает элементы)
//
// Параметры:
//   ТаблицаНоменклатур - ТаблицаЗначений - таблица, в которой хранятся обрабатываемые номенклатуры
//   КоличествоЭлементовУспешно - Число - количество успешно загруженных элементов
//   КоличествоЭлементовОшибка - Число - количество не загруженных элементов
//
Процедура ОбработатьТаблицуНоменклатур(Знач ТаблицаНоменклатур, КоличествоЭлементовУспешно, КоличествоЭлементовОшибка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатур.Код КАК Код,
		|	ТаблицаНоменклатур.Наименование КАК Наименование,
		|	ТаблицаНоменклатур.Вид КАК Вид,
		|	ТаблицаНоменклатур.ПометкаУдаления КАК ПометкаУдаления
		|ПОМЕСТИТЬ ВТ_ТаблицаНоменклатур
		|ИЗ
		|	&ТаблицаНоменклатур КАК ТаблицаНоменклатур
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТаблицаНоменклатур.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ТаблицаНоменклатур.Код КАК Код,
		|	ВТ_ТаблицаНоменклатур.Наименование КАК Наименование,
		|	ВТ_ТаблицаНоменклатур.Вид КАК Вид,
		|	ВТ_ТаблицаНоменклатур.ПометкаУдаления КАК ПометкаУдаления,
		|	ЕСТЬNULL(Номенклатура.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Ссылка
		|ИЗ
		|	ВТ_ТаблицаНоменклатур КАК ВТ_ТаблицаНоменклатур
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ВТ_ТаблицаНоменклатур.Код = Номенклатура.Код";
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатур", ТаблицаНоменклатур);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка) Тогда
			СправочникОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Иначе
			СправочникОбъект = Справочники.Номенклатура.СоздатьЭлемент();
		КонецЕсли;
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("Код",             ВыборкаДетальныеЗаписи.Код);
		ДанныеЗаполнения.Вставить("Наименование",    ВыборкаДетальныеЗаписи.Наименование);
		ДанныеЗаполнения.Вставить("Вид",             Перечисления.ВидыНоменклатуры.ВидНоменклатурыПоСинониму(ВыборкаДетальныеЗаписи.Вид));
		ДанныеЗаполнения.Вставить("ПометкаУдаления", ?(ВыборкаДетальныеЗаписи.ПометкаУдаления = "Да", Истина, Ложь));
		
		СправочникОбъект.Заполнить(ДанныеЗаполнения);
		
		Попытка
			СправочникОбъект.Записать();
			КоличествоЭлементовУспешно = КоличествоЭлементовУспешно + 1;
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(
				НСтр("ru = 'Невозможно записать элемент справочника ""Номенклатура"" с кодом %1 и наименованием %2. Описание ошибки: %3'"),
				ВыборкаДетальныеЗаписи.Код,
				ВыборкаДетальныеЗаписи.Наименование,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Сообщение.Сообщить();
			КоличествоЭлементовОшибка = КоличествоЭлементовОшибка + 1;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
